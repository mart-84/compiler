name: CI Maven

on: [push]

jobs:
# TODO matrix for multiple JDKs
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '22'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package -DskipTests
    - name: Upload compiler.jar
      uses: actions/upload-artifact@v4
      with:
        name: compiler.jar
        path: target/compiler-*.jar

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: maven
      - name: Test with Maven
        run: mvn verify
      - name: Upload generated test files on failure
        uses: actions/upload-artifact@v4
        with:
          name: Generated test files
          path: target/compile-test
        if: failure()
      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "target/surefire-reports/TEST-*.xml"
        if: always()
      - name: Generate Surefire tests report
        run: mvn surefire-report:report-only
        if: always()
      - name: Upload Surefire tests report
        uses: actions/upload-artifact@v4
        with:
          name: Surefire tests report
          path: target/site/surefire
        if: always()
      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: JaCoCo report
          path: target/site/jacoco

  code-quality:
    name: Code Quality analysis
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '22'
        distribution: 'temurin'
        cache: maven
    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=mart-84_compiler
